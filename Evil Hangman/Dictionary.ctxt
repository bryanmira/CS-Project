#BlueJ class context
comment0.params=
comment0.target=Dictionary()
comment1.params=key\ value
comment1.target=java.lang.String\ add(java.lang.Comparable,\ java.lang.String)
comment1.text=\ Adds\ a\ new\ entry\ to\ this\ dictionary.\ If\ the\ given\ search\n\ \ \ \ key\ already\ exists\ in\ the\ dictionary,\ replaces\ the\n\ \ \ \ corresponding\ value.\n\ \ \ \ @param\ key\ an\ object\ search\ key\ of\ the\ new\ entry\n\ \ \ \ @param\ value\ an\ object\ associated\ with\ the\ search\ key\n\ \ \ \ @return\ either\ null\ if\ the\ new\ entry\ was\ added\ to\ the\ dictionary\n\ \ \ \ or\ the\ value\ that\ was\ associated\ with\ key\ if\ that\ value\nwas\ replaced
comment10.params=
comment10.target=java.util.Iterator\ getKeyIterator()
comment10.text=\ Creates\ an\ iterator\ that\ traverses\ all\ search\ keys\ in\ this\n\ \ \ \ dictionary.\n\ \ \ \ @return\ an\ iterator\ that\ provides\ sequential\ access\ to\ the\ search\nkeys\ in\ the\ dictionary
comment11.params=
comment11.target=java.util.Iterator\ getValueIterator()
comment11.text=\ Creates\ an\ iterator\ that\ traverses\ all\ values\ in\ this\ dictionary.\n\ \ \ \ @return\ an\ iterator\ that\ provides\ sequential\ access\ to\ the\ values\nin\ this\ dictionary
comment12.params=
comment12.target=boolean\ isEmpty()
comment12.text=\ Sees\ whether\ this\ dictionary\ is\ empty.\n@return\ true\ if\ the\ dictionary\ is\ empty
comment13.params=
comment13.target=int\ getSize()
comment13.text=\ Gets\ the\ size\ of\ this\ dictionary.\n\ \ \ \ @return\ the\ number\ of\ entries\ (key-value\ pairs)\ currently\nin\ the\ dictionary
comment14.params=
comment14.target=void\ clear()
comment14.text=Removes\ all\ entries\ from\ this\ dictionary.
comment2.params=key
comment2.target=java.lang.String\ remove(java.lang.Comparable)
comment2.text=\ Removes\ a\ specific\ entry\ from\ this\ dictionary.\n\ \ \ \ @param\ key\ an\ object\ search\ key\ of\ the\ entry\ to\ be\ removed\n\ \ \ \ @return\ either\ the\ value\ that\ was\ associated\ with\ the\ search\ key\nor\ null\ if\ no\ such\ object\ exists
comment3.params=key\ value
comment3.target=int\ findLocation(java.lang.Comparable,\ java.lang.String)
comment4.params=key
comment4.target=java.lang.String\ getValue(java.lang.Comparable)
comment4.text=\ Retrieves\ from\ this\ dictionary\ the\ value\ associated\ with\ a\ given\n\ \ \ \ search\ key.\n\ \ \ \ @param\ key\ an\ object\ search\ key\ of\ the\ entry\ to\ be\ retrieved\n\ \ \ \ @return\ either\ the\ value\ that\ is\ associated\ with\ the\ search\ key\nor\ null\ if\ no\ such\ object\ exists
comment5.params=value
comment5.target=java.lang.Comparable\ getKey(java.lang.String)
comment6.params=key
comment6.target=boolean\ contains(java.lang.Comparable)
comment6.text=\ Sees\ whether\ a\ specific\ entry\ is\ in\ this\ dictionary.\n\ \ \ \ @param\ key\ an\ object\ search\ key\ of\ the\ desired\ entry\n\ \ \ \ @return\ true\ if\ key\ is\ associated\ with\ an\ entry\ in\ the\ndictionary
comment7.params=value
comment7.target=boolean\ containsV(java.lang.String)
comment8.params=value
comment8.target=int\ frequency(java.lang.String)
comment9.params=
comment9.target=java.lang.String\ mostFrequent()
numComments=15
